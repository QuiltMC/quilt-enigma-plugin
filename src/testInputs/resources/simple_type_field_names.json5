{
    $schema: "../../main/resources/simple_type_field_names_schema.json",

    "com/a/b/a": "config",

    // for conflict fix test
    "java/lang/CharSequence": {
        local_name: "id",
        exclusive: true,
        fallback: [
            "identifier"
        ]
    },
    "java/lang/StringBuilder": {
        "local_name": "stringBuilder",
        exclusive: true
    },

    // Position
    "com/a/b/b": "pos", // Pos
    "com/a/b/c": { // Position
        local_name: "pos",
        exclusive: true,
        fallback: [
            "position"
        ]
    },
    "com/a/b/d": { // RandomPosition
        local_name: "pos",
        exclusive: true,
        fallback: [
            "position",
            "randomPosition"
        ]
    },

    // State
    "com/a/b/e": { // StateA
        local_name: "state",
        static_name: "STATIC_STATE",
        exclusive: true,
        fallback: [
            {
                local_name: "stateA",
                static_name: "STATIC_STATE_A"
            }
        ]
    },
    "com/a/b/f": { // StateB
        local_name: "state",
        static_name: "STATIC_STATE",
        exclusive: true,
        fallback: [
            {
                local_name: "stateB",
                static_name: "STATIC_STATE_B"
            },
        ]
    },

    // Value
    "com/a/b/g": { // ValueA
        local_name: "value",
        exclusive: true,
        fallback: [
            "valueA"
        ]
    },
    "com/a/b/h": { // ValueB
        local_name: "value",
        exclusive: true,
        fallback: [
            "valueB"
        ]
    },
    "com/a/b/i": { // ValueC
        local_name: "value",
        exclusive: true,
        fallback: [
            "valueC"
        ]
    },
    "com/a/b/j": { // ValueD
        local_name: "valueD",
        exclusive: true,
        inherit: true
    },
    "com/a/b/l": { // ValueE
        local_name: "valueE",
        exclusive: true
    },
    "not/present": "missing"
}
